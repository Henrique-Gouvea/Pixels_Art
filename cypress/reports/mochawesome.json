{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-12-10T00:19:20.097Z",
    "end": "2021-12-10T00:20:40.821Z",
    "duration": 80724,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dc7ff9af-670e-4d54-b3db-80db687553be",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c4a6fb0a-987d-4e9e-8b47-61c747eda484",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "c8dea994-2bbe-4303-a27c-7cb50f511465",
              "parentUUID": "c4a6fb0a-987d-4e9e-8b47-61c747eda484",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8dea994-2bbe-4303-a27c-7cb50f511465"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 191,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f6b9ca28-6dee-4583-8cef-cbb82d66d63b",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "6d6a0280-20cf-4873-8482-3d12f0cdef7a",
              "parentUUID": "f6b9ca28-6dee-4583-8cef-cbb82d66d63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "29043e26-83fe-434c-b50a-b0ad4809a300",
              "parentUUID": "f6b9ca28-6dee-4583-8cef-cbb82d66d63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "e6cc7bfd-4b84-4f38-913a-d3c44b211b3e",
              "parentUUID": "f6b9ca28-6dee-4583-8cef-cbb82d66d63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "64845628-e31a-47c0-8c7e-3d2becfd09d7",
              "parentUUID": "f6b9ca28-6dee-4583-8cef-cbb82d66d63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "43c11e28-eb1f-4a3d-ab68-77c09f6495c8",
              "parentUUID": "f6b9ca28-6dee-4583-8cef-cbb82d66d63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "75430811-c6e4-434f-a99d-b4318c7e9bf2",
              "parentUUID": "f6b9ca28-6dee-4583-8cef-cbb82d66d63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "14c9f49e-59a6-469b-b2d5-e20fa639b67a",
              "parentUUID": "f6b9ca28-6dee-4583-8cef-cbb82d66d63b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d6a0280-20cf-4873-8482-3d12f0cdef7a",
            "29043e26-83fe-434c-b50a-b0ad4809a300",
            "e6cc7bfd-4b84-4f38-913a-d3c44b211b3e",
            "64845628-e31a-47c0-8c7e-3d2becfd09d7",
            "43c11e28-eb1f-4a3d-ab68-77c09f6495c8",
            "75430811-c6e4-434f-a99d-b4318c7e9bf2",
            "14c9f49e-59a6-469b-b2d5-e20fa639b67a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1005,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "73cbd5df-6317-4d53-90a6-768d1f7ed53c",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "843fa788-690f-45f2-ab04-73b02cd78865",
              "parentUUID": "73cbd5df-6317-4d53-90a6-768d1f7ed53c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "5cc5d065-0fbe-47db-bbf4-f8f337f2be42",
              "parentUUID": "73cbd5df-6317-4d53-90a6-768d1f7ed53c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "843fa788-690f-45f2-ab04-73b02cd78865",
            "5cc5d065-0fbe-47db-bbf4-f8f337f2be42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 286,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8aa1e2e3-1fe4-4335-b656-59fda6b29384",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "23210e98-8902-4009-921d-c540380971fc",
              "parentUUID": "8aa1e2e3-1fe4-4335-b656-59fda6b29384",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "320c44a3-d88e-4263-b682-26854ec554fb",
              "parentUUID": "8aa1e2e3-1fe4-4335-b656-59fda6b29384",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c6b3ca1b-f32b-46ac-b1c4-f3d8843ead60",
              "parentUUID": "8aa1e2e3-1fe4-4335-b656-59fda6b29384",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "dc4f0c3d-6b22-4553-8483-fe2b60e74142",
              "parentUUID": "8aa1e2e3-1fe4-4335-b656-59fda6b29384",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23210e98-8902-4009-921d-c540380971fc",
            "320c44a3-d88e-4263-b682-26854ec554fb",
            "c6b3ca1b-f32b-46ac-b1c4-f3d8843ead60",
            "dc4f0c3d-6b22-4553-8483-fe2b60e74142"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 473,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e070dd23-d7b8-4bfb-a6fe-852c84f3bbdc",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "c268673e-ee26-4b51-8007-ab8c10d1a497",
              "parentUUID": "e070dd23-d7b8-4bfb-a6fe-852c84f3bbdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "01060d25-5613-47af-ab5a-3eb87c704654",
              "parentUUID": "e070dd23-d7b8-4bfb-a6fe-852c84f3bbdc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c268673e-ee26-4b51-8007-ab8c10d1a497",
            "01060d25-5613-47af-ab5a-3eb87c704654"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 551,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb5a958a-76aa-44db-9443-b902207f429c",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "e11d2d8b-456e-4e66-85f9-7b30785c28b2",
              "parentUUID": "fb5a958a-76aa-44db-9443-b902207f429c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "fb8a3e3f-c78e-4bb1-bdb0-124017e64168",
              "parentUUID": "fb5a958a-76aa-44db-9443-b902207f429c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e11d2d8b-456e-4e66-85f9-7b30785c28b2",
            "fb8a3e3f-c78e-4bb1-bdb0-124017e64168"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 210,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "27837bdf-ffc2-47c9-8c4f-3603921eeb46",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 545,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "479996cd-ca02-4fa9-8793-3177a2c6f3fd",
              "parentUUID": "27837bdf-ffc2-47c9-8c4f-3603921eeb46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8740,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "a8e048f0-8732-4a87-b5e4-ee471895debb",
              "parentUUID": "27837bdf-ffc2-47c9-8c4f-3603921eeb46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "479996cd-ca02-4fa9-8793-3177a2c6f3fd",
            "a8e048f0-8732-4a87-b5e4-ee471895debb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9285,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e7f60219-eea1-4e68-b532-df68475d22ce",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "d4943a83-0ae7-40cd-ab6b-e0160b008555",
              "parentUUID": "e7f60219-eea1-4e68-b532-df68475d22ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "7a947786-d5e8-4d0c-8eef-90d8cc455c38",
              "parentUUID": "e7f60219-eea1-4e68-b532-df68475d22ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "6eb3a303-d6f8-41eb-baf5-c5c45dddba2d",
              "parentUUID": "e7f60219-eea1-4e68-b532-df68475d22ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4943a83-0ae7-40cd-ab6b-e0160b008555",
            "7a947786-d5e8-4d0c-8eef-90d8cc455c38",
            "6eb3a303-d6f8-41eb-baf5-c5c45dddba2d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11857,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6da3f252-eff8-43e7-bed6-7b1887426a64",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "f05d5f73-1063-4594-91a2-48533c36b4c3",
              "parentUUID": "6da3f252-eff8-43e7-bed6-7b1887426a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "7cbd4c1e-9713-4221-9848-2047522ccb03",
              "parentUUID": "6da3f252-eff8-43e7-bed6-7b1887426a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "be419c27-62b2-4a5a-b528-8a56b012e3cf",
              "parentUUID": "6da3f252-eff8-43e7-bed6-7b1887426a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2344,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "ba7c4440-4a57-4af6-9b30-17404482def6",
              "parentUUID": "6da3f252-eff8-43e7-bed6-7b1887426a64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f05d5f73-1063-4594-91a2-48533c36b4c3",
            "7cbd4c1e-9713-4221-9848-2047522ccb03",
            "be419c27-62b2-4a5a-b528-8a56b012e3cf",
            "ba7c4440-4a57-4af6-9b30-17404482def6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2694,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8181ff22-2b01-48e7-bc45-7697b78acc85",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4328,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f81a3f21-1d9e-4e2a-96fc-6bee69aaf3c2",
              "parentUUID": "8181ff22-2b01-48e7-bc45-7697b78acc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4362,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6b485776-02a9-4429-aaf6-c6bb08936d5e",
              "parentUUID": "8181ff22-2b01-48e7-bc45-7697b78acc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4382,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "404269e2-42d2-4d75-aa6d-b81e4b3675be",
              "parentUUID": "8181ff22-2b01-48e7-bc45-7697b78acc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4453,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0c700636-9caf-441c-9d0c-62e66360ee6d",
              "parentUUID": "8181ff22-2b01-48e7-bc45-7697b78acc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4306,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3a74f3b9-371b-45fc-b35e-e88055bcd37a",
              "parentUUID": "8181ff22-2b01-48e7-bc45-7697b78acc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4419,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f209409a-dc3b-4160-a0cb-04e9cb496fef",
              "parentUUID": "8181ff22-2b01-48e7-bc45-7697b78acc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4342,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "25b368b1-5fae-422f-8694-dcb7a5587cc8",
              "parentUUID": "8181ff22-2b01-48e7-bc45-7697b78acc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4312,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8dfbe97a-60f9-4cbc-903b-92940c8575ea",
              "parentUUID": "8181ff22-2b01-48e7-bc45-7697b78acc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4357,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b273a3a3-7995-4775-babc-88a05d79d29e",
              "parentUUID": "8181ff22-2b01-48e7-bc45-7697b78acc85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f81a3f21-1d9e-4e2a-96fc-6bee69aaf3c2",
            "6b485776-02a9-4429-aaf6-c6bb08936d5e",
            "404269e2-42d2-4d75-aa6d-b81e4b3675be",
            "0c700636-9caf-441c-9d0c-62e66360ee6d",
            "3a74f3b9-371b-45fc-b35e-e88055bcd37a",
            "f209409a-dc3b-4160-a0cb-04e9cb496fef",
            "25b368b1-5fae-422f-8694-dcb7a5587cc8",
            "8dfbe97a-60f9-4cbc-903b-92940c8575ea",
            "b273a3a3-7995-4775-babc-88a05d79d29e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39261,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "07072ac7-ea2a-4d12-9348-7c8d08010cc9",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "be53b188-f94e-4923-aae9-038df89e4e32",
              "parentUUID": "07072ac7-ea2a-4d12-9348-7c8d08010cc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4298,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1e3b3626-e108-4463-abd1-777a9bb91d7c",
              "parentUUID": "07072ac7-ea2a-4d12-9348-7c8d08010cc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4286,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36317/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36317/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36317/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36317/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36317/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36317/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36317/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36317/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36317/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36317/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36317/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "de593607-f179-43f5-b654-4f3f3fcb4e71",
              "parentUUID": "07072ac7-ea2a-4d12-9348-7c8d08010cc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "be53b188-f94e-4923-aae9-038df89e4e32",
            "1e3b3626-e108-4463-abd1-777a9bb91d7c",
            "de593607-f179-43f5-b654-4f3f3fcb4e71"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12959,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a017cd8-e9e4-4ca6-b5e3-f2431e3fc29d",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "aad676fe-efb8-401d-8017-7bbb6093f5ba",
              "parentUUID": "8a017cd8-e9e4-4ca6-b5e3-f2431e3fc29d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "2ae70697-6a78-438b-9b2b-213b4844bdc0",
              "parentUUID": "8a017cd8-e9e4-4ca6-b5e3-f2431e3fc29d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aad676fe-efb8-401d-8017-7bbb6093f5ba",
            "2ae70697-6a78-438b-9b2b-213b4844bdc0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 831,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}